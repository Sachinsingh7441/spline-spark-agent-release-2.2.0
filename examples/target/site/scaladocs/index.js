Index.PACKAGES = {"za.co.absa.spline.example.dce" : [{"name" : "za.co.absa.spline.example.dce.J1StandardizationJob", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/dce\/J1StandardizationJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.dce.J2ConformanceJob", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "currencyRateMapping", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.dce.J2ConformanceJob.currencyRateMapping", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#currencyRateMapping:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "currencyMapping", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.dce.J2ConformanceJob.currencyMapping", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#currencyMapping:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "countryMapping", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.dce.J2ConformanceJob.countryMapping", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#countryMapping:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/dce\/J2ConformanceJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.dce.MyOtherAJob", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherAJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.dce.MyOtherBJob", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherBJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.dce.MyOtherCJob", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/dce\/MyOtherCJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "za.co.absa.spline" : [{"name" : "za.co.absa.spline.SparkApp", "shortDescription" : "The class represents skeleton of a example application and looks after initialization of SparkSession, etc", "members_class" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/SparkApp.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/SparkApp.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/SparkApp.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"member" : "za.co.absa.spline.SparkApp#<init>", "error" : "unsupported entity"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/SparkApp.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/SparkApp.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/SparkApp.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/SparkApp.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/SparkApp.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/SparkApp.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/SparkApp.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/SparkApp.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/SparkApp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/SparkApp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/SparkApp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/SparkApp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/SparkApp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/SparkApp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/SparkApp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/SparkApp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/SparkApp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/SparkApp.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/SparkApp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/SparkApp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/SparkApp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/SparkApp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/SparkApp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/SparkApp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/SparkApp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/SparkApp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/SparkApp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "za\/co\/absa\/spline\/SparkApp.html", "kind" : "class"}], "za.co" : [], "za.co.absa.spline.issue" : [{"name" : "za.co.absa.spline.issue.DeltaDSV2Job", "shortDescription" : "This Job requires Spark 3 or higher", "object" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "data", "tail" : ": DataFrame", "member" : "za.co.absa.spline.issue.DeltaDSV2Job.data", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#data:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "za.co.absa.spline.issue.DeltaDSV2Job.path", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#path:java.nio.file.Path", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/issue\/DeltaDSV2Job$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.issue.DeltaMergeDSV2Job", "shortDescription" : "This Job requires Spark 3 or higher", "object" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "path", "tail" : ": Path", "member" : "za.co.absa.spline.issue.DeltaMergeDSV2Job.path", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#path:java.nio.file.Path", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/issue\/DeltaMergeDSV2Job$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.issue.GitHub718Job", "shortDescription" : "This is a test scenario for the lineage graph alignment on the UI", "object" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "pG", "tail" : ": String", "member" : "za.co.absa.spline.issue.GitHub718Job.pG", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#pG:String", "kind" : "val"}, {"label" : "pF", "tail" : ": String", "member" : "za.co.absa.spline.issue.GitHub718Job.pF", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#pF:String", "kind" : "val"}, {"label" : "pE", "tail" : ": String", "member" : "za.co.absa.spline.issue.GitHub718Job.pE", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#pE:String", "kind" : "val"}, {"label" : "pD", "tail" : ": String", "member" : "za.co.absa.spline.issue.GitHub718Job.pD", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#pD:String", "kind" : "val"}, {"label" : "pC", "tail" : ": String", "member" : "za.co.absa.spline.issue.GitHub718Job.pC", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#pC:String", "kind" : "val"}, {"label" : "pB", "tail" : ": String", "member" : "za.co.absa.spline.issue.GitHub718Job.pB", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#pB:String", "kind" : "val"}, {"label" : "pA", "tail" : ": String", "member" : "za.co.absa.spline.issue.GitHub718Job.pA", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#pA:String", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/issue\/GitHub718Job$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.issue.GitHub738Job", "shortDescription" : "This example was provided by one of our community member.", "object" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "nAppends", "tail" : ": Int", "member" : "za.co.absa.spline.issue.GitHub738Job.nAppends", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#nAppends:Int", "kind" : "val"}, {"label" : "nIters", "tail" : ": Int", "member" : "za.co.absa.spline.issue.GitHub738Job.nIters", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#nIters:Int", "kind" : "val"}, {"label" : "secondarySourcePaths", "tail" : ": IndexedSeq[String]", "member" : "za.co.absa.spline.issue.GitHub738Job.secondarySourcePaths", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#secondarySourcePaths:scala.collection.immutable.IndexedSeq[String]", "kind" : "val"}, {"label" : "primarySourcePaths", "tail" : ": IndexedSeq[String]", "member" : "za.co.absa.spline.issue.GitHub738Job.primarySourcePaths", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#primarySourcePaths:scala.collection.immutable.IndexedSeq[String]", "kind" : "val"}, {"label" : "secondarySourceKeys", "tail" : ": IndexedSeq[Char]", "member" : "za.co.absa.spline.issue.GitHub738Job.secondarySourceKeys", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#secondarySourceKeys:scala.collection.immutable.IndexedSeq[Char]", "kind" : "val"}, {"label" : "primarySourceKeys", "tail" : ": IndexedSeq[Char]", "member" : "za.co.absa.spline.issue.GitHub738Job.primarySourceKeys", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#primarySourceKeys:scala.collection.immutable.IndexedSeq[Char]", "kind" : "val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#logName:String", "kind" : "def"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/issue\/GitHub738Job$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "za.co.absa.spline.example.bigquery" : [{"name" : "za.co.absa.spline.example.bigquery.BigQueryExample", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "df2", "tail" : ": Dataset[Row]", "member" : "za.co.absa.spline.example.bigquery.BigQueryExample.df2", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#df2:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "df1", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.bigquery.BigQueryExample.df1", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#df1:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/bigquery\/BigQueryExample$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "za.co.absa.spline.example" : [], "za.co.absa" : [], "za.co.absa.spline.example.batch" : [{"name" : "za.co.absa.spline.example.batch.CodelessInitExampleJob", "shortDescription" : "An example job where no explicit Spline code was used to initialize Spline.", "object" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/CodelessInitExampleJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.batch.Example1FailingJob", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "Foo", "tail" : "", "member" : "za.co.absa.spline.example.batch.Example1FailingJob.Foo", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#FooextendsProductwithSerializable", "kind" : "case class"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1FailingJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.batch.Example1SuccessJob", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "joinedDS", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batch.Example1SuccessJob.joinedDS", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#joinedDS:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "domainMappingDS", "tail" : ": Dataset[Row]", "member" : "za.co.absa.spline.example.batch.Example1SuccessJob.domainMappingDS", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#domainMappingDS:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "sourceDS", "tail" : ": Dataset[Row]", "member" : "za.co.absa.spline.example.batch.Example1SuccessJob.sourceDS", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#sourceDS:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/Example1SuccessJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.batch.Example2Job", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "stage2DS", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batch.Example2Job.stage2DS", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#stage2DS:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "stage1DS", "tail" : ": Dataset[Row]", "member" : "za.co.absa.spline.example.batch.Example2Job.stage1DS", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#stage1DS:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "secondDS", "tail" : ": Dataset[Row]", "member" : "za.co.absa.spline.example.batch.Example2Job.secondDS", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#secondDS:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "firstDS", "tail" : ": Dataset[Row]", "member" : "za.co.absa.spline.example.batch.Example2Job.firstDS", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#firstDS:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "startingDS", "tail" : ": Dataset[Row]", "member" : "za.co.absa.spline.example.batch.Example2Job.startingDS", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#startingDS:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "ds", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batch.Example2Job.ds", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#ds:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/Example2Job$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.batch.Example3Job", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "otherReferencesDS", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batch.Example3Job.otherReferencesDS", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#otherReferencesDS:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "journalReferencesDS", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batch.Example3Job.journalReferencesDS", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#journalReferencesDS:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "astronomySubjectsDS", "tail" : ": Dataset[Row]", "member" : "za.co.absa.spline.example.batch.Example3Job.astronomySubjectsDS", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#astronomySubjectsDS:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "ds", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batch.Example3Job.ds", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#ds:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "nasaSchema", "tail" : ": StructType", "member" : "za.co.absa.spline.example.batch.Example3Job.nasaSchema", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#nasaSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "refType", "tail" : ": StructType", "member" : "za.co.absa.spline.example.batch.Example3Job.refType", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#refType:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/Example3Job$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.batch.Example4RDDJob", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "rddRes", "tail" : ": RDD[Int]", "member" : "za.co.absa.spline.example.batch.Example4RDDJob.rddRes", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#rddRes:org.apache.spark.rdd.RDD[Int]", "kind" : "val"}, {"label" : "rddData", "tail" : ": RDD[Row]", "member" : "za.co.absa.spline.example.batch.Example4RDDJob.rddData", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#rddData:org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/Example4RDDJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.batch.ExcelJob", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "res", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batch.ExcelJob.res", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#res:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "df", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batch.ExcelJob.df", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#df:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/ExcelJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.batch.JavaExampleJob", "shortDescription" : "", "members_class" : [{"member" : "za.co.absa.spline.example.batch.JavaExampleJob#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "za\/co\/absa\/spline\/example\/batch\/JavaExampleJob.html", "kind" : "class"}, {"name" : "za.co.absa.spline.example.batch.UnionJob", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "df5", "tail" : ": Dataset[Row]", "member" : "za.co.absa.spline.example.batch.UnionJob.df5", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#df5:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "df4", "tail" : ": Dataset[Row]", "member" : "za.co.absa.spline.example.batch.UnionJob.df4", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#df4:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "df3", "tail" : ": Dataset[Row]", "member" : "za.co.absa.spline.example.batch.UnionJob.df3", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#df3:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "df2", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batch.UnionJob.df2", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#df2:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "df1", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batch.UnionJob.df1", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#df1:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/UnionJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.batch.WindowFunctionJob", "shortDescription" : "Example taken from:https:\/\/databricks.com\/blog\/2015\/07\/15\/introducing-window-functions-in-spark-sql.html", "object" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "revenue_difference", "tail" : ": Column", "member" : "za.co.absa.spline.example.batch.WindowFunctionJob.revenue_difference", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#revenue_difference:org.apache.spark.sql.Column", "kind" : "val"}, {"label" : "dataFrame", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batch.WindowFunctionJob.dataFrame", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#dataFrame:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "windowSpec", "tail" : ": WindowSpec", "member" : "za.co.absa.spline.example.batch.WindowFunctionJob.windowSpec", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#windowSpec:org.apache.spark.sql.expressions.WindowSpec", "kind" : "val"}, {"label" : "testData", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batch.WindowFunctionJob.testData", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#testData:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batch\/WindowFunctionJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "za.co.absa.spline.example.batchWithDependencies" : [{"name" : "za.co.absa.spline.example.batchWithDependencies.JansBeerJob", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "result", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batchWithDependencies.JansBeerJob.result", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#result:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "calculateConsumptionPerCapita", "tail" : "(year: String): Column", "member" : "za.co.absa.spline.example.batchWithDependencies.JansBeerJob.calculateConsumptionPerCapita", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#calculateConsumptionPerCapita(year:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "population", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batchWithDependencies.JansBeerJob.population", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#population:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "beerConsumption", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batchWithDependencies.JansBeerJob.beerConsumption", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#beerConsumption:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/JansBeerJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.batchWithDependencies.MareksJob", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "result", "tail" : ": Dataset[Row]", "member" : "za.co.absa.spline.example.batchWithDependencies.MareksJob.result", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#result:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "beerConsumtion", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batchWithDependencies.MareksJob.beerConsumtion", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#beerConsumtion:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "gdpPerCapita", "tail" : ": Dataset[Row]", "member" : "za.co.absa.spline.example.batchWithDependencies.MareksJob.gdpPerCapita", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#gdpPerCapita:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "cleaned", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batchWithDependencies.MareksJob.cleaned", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#cleaned:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "input", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batchWithDependencies.MareksJob.input", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#input:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/MareksJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.example.batchWithDependencies.OtherJob", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html", "members_object" : [{"label" : "StringToColumn", "tail" : "", "member" : "org.apache.spark.sql.SQLImplicits.StringToColumn", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#StringToColumnextendsAnyRef", "kind" : "implicit class"}, {"label" : "result", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batchWithDependencies.OtherJob.result", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#result:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "beerConsumption", "tail" : ": DataFrame", "member" : "za.co.absa.spline.example.batchWithDependencies.OtherJob.beerConsumption", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#beerConsumption:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "_sqlContext", "tail" : "(): SQLContext", "member" : "za.co.absa.spline.SparkApp._sqlContext", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#_sqlContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "za.co.absa.spline.SparkApp.spark", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#executionStart:Long", "kind" : "val"}, {"label" : "symbolToColumn", "tail" : "(s: Symbol): ColumnName", "member" : "org.apache.spark.sql.SQLImplicits.symbolToColumn", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#symbolToColumn(s:Symbol):org.apache.spark.sql.ColumnName", "kind" : "implicit def"}, {"label" : "localSeqToDatasetHolder", "tail" : "(s: Seq[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.localSeqToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#localSeqToDatasetHolder[T](s:Seq[T])(implicitevidence$8:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "rddToDatasetHolder", "tail" : "(rdd: RDD[T])(arg0: Encoder[T]): DatasetHolder[T]", "member" : "org.apache.spark.sql.SQLImplicits.rddToDatasetHolder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#rddToDatasetHolder[T](rdd:org.apache.spark.rdd.RDD[T])(implicitevidence$7:org.apache.spark.sql.Encoder[T]):org.apache.spark.sql.DatasetHolder[T]", "kind" : "implicit def"}, {"label" : "newProductArrayEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Array[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newProductArrayEncoder[A<:Product](implicitevidence$6:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Array[A]]", "kind" : "implicit def"}, {"label" : "newStringArrayEncoder", "tail" : "(): Encoder[Array[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newStringArrayEncoder:org.apache.spark.sql.Encoder[Array[String]]", "kind" : "implicit def"}, {"label" : "newBooleanArrayEncoder", "tail" : "(): Encoder[Array[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newBooleanArrayEncoder:org.apache.spark.sql.Encoder[Array[Boolean]]", "kind" : "implicit def"}, {"label" : "newShortArrayEncoder", "tail" : "(): Encoder[Array[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newShortArrayEncoder:org.apache.spark.sql.Encoder[Array[Short]]", "kind" : "implicit def"}, {"label" : "newByteArrayEncoder", "tail" : "(): Encoder[Array[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newByteArrayEncoder:org.apache.spark.sql.Encoder[Array[Byte]]", "kind" : "implicit def"}, {"label" : "newFloatArrayEncoder", "tail" : "(): Encoder[Array[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newFloatArrayEncoder:org.apache.spark.sql.Encoder[Array[Float]]", "kind" : "implicit def"}, {"label" : "newDoubleArrayEncoder", "tail" : "(): Encoder[Array[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newDoubleArrayEncoder:org.apache.spark.sql.Encoder[Array[Double]]", "kind" : "implicit def"}, {"label" : "newLongArrayEncoder", "tail" : "(): Encoder[Array[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newLongArrayEncoder:org.apache.spark.sql.Encoder[Array[Long]]", "kind" : "implicit def"}, {"label" : "newIntArrayEncoder", "tail" : "(): Encoder[Array[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntArrayEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newIntArrayEncoder:org.apache.spark.sql.Encoder[Array[Int]]", "kind" : "implicit def"}, {"label" : "newSetEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSetEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newSetEncoder[T<:Set[_]](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newMapEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newMapEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newMapEncoder[T<:scala.collection.Map[_,_]](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newSequenceEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.SQLImplicits.newSequenceEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newSequenceEncoder[T<:Seq[_]](implicitevidence$3:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "newProductSeqEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[Seq[A]]", "member" : "org.apache.spark.sql.SQLImplicits.newProductSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newProductSeqEncoder[A<:Product](implicitevidence$2:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[Seq[A]]", "kind" : "def"}, {"label" : "newStringSeqEncoder", "tail" : "(): Encoder[Seq[String]]", "member" : "org.apache.spark.sql.SQLImplicits.newStringSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newStringSeqEncoder:org.apache.spark.sql.Encoder[Seq[String]]", "kind" : "def"}, {"label" : "newBooleanSeqEncoder", "tail" : "(): Encoder[Seq[Boolean]]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newBooleanSeqEncoder:org.apache.spark.sql.Encoder[Seq[Boolean]]", "kind" : "def"}, {"label" : "newShortSeqEncoder", "tail" : "(): Encoder[Seq[Short]]", "member" : "org.apache.spark.sql.SQLImplicits.newShortSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newShortSeqEncoder:org.apache.spark.sql.Encoder[Seq[Short]]", "kind" : "def"}, {"label" : "newByteSeqEncoder", "tail" : "(): Encoder[Seq[Byte]]", "member" : "org.apache.spark.sql.SQLImplicits.newByteSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newByteSeqEncoder:org.apache.spark.sql.Encoder[Seq[Byte]]", "kind" : "def"}, {"label" : "newFloatSeqEncoder", "tail" : "(): Encoder[Seq[Float]]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newFloatSeqEncoder:org.apache.spark.sql.Encoder[Seq[Float]]", "kind" : "def"}, {"label" : "newDoubleSeqEncoder", "tail" : "(): Encoder[Seq[Double]]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newDoubleSeqEncoder:org.apache.spark.sql.Encoder[Seq[Double]]", "kind" : "def"}, {"label" : "newLongSeqEncoder", "tail" : "(): Encoder[Seq[Long]]", "member" : "org.apache.spark.sql.SQLImplicits.newLongSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newLongSeqEncoder:org.apache.spark.sql.Encoder[Seq[Long]]", "kind" : "def"}, {"label" : "newIntSeqEncoder", "tail" : "(): Encoder[Seq[Int]]", "member" : "org.apache.spark.sql.SQLImplicits.newIntSeqEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newIntSeqEncoder:org.apache.spark.sql.Encoder[Seq[Int]]", "kind" : "def"}, {"label" : "newBoxedBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newBoxedBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newBoxedShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newBoxedShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newBoxedByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newBoxedByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newBoxedFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newBoxedFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newBoxedDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newBoxedDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newBoxedLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newBoxedLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newBoxedIntEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.apache.spark.sql.SQLImplicits.newBoxedIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newBoxedIntEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "newJavaEnumEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A]): Encoder[A]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaEnumEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newJavaEnumEncoder[A<:Enum[_]](implicitevidence$1:reflect.runtime.universe.TypeTag[A]):org.apache.spark.sql.Encoder[A]", "kind" : "implicit def"}, {"label" : "newPeriodEncoder", "tail" : "(): Encoder[Period]", "member" : "org.apache.spark.sql.SQLImplicits.newPeriodEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newPeriodEncoder:org.apache.spark.sql.Encoder[java.time.Period]", "kind" : "implicit def"}, {"label" : "newDurationEncoder", "tail" : "(): Encoder[Duration]", "member" : "org.apache.spark.sql.SQLImplicits.newDurationEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newDurationEncoder:org.apache.spark.sql.Encoder[java.time.Duration]", "kind" : "implicit def"}, {"label" : "newInstantEncoder", "tail" : "(): Encoder[Instant]", "member" : "org.apache.spark.sql.SQLImplicits.newInstantEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newInstantEncoder:org.apache.spark.sql.Encoder[java.time.Instant]", "kind" : "implicit def"}, {"label" : "newTimeStampEncoder", "tail" : "(): Encoder[Timestamp]", "member" : "org.apache.spark.sql.SQLImplicits.newTimeStampEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newTimeStampEncoder:org.apache.spark.sql.Encoder[java.sql.Timestamp]", "kind" : "implicit def"}, {"label" : "newLocalDateTimeEncoder", "tail" : "(): Encoder[LocalDateTime]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateTimeEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newLocalDateTimeEncoder:org.apache.spark.sql.Encoder[java.time.LocalDateTime]", "kind" : "implicit def"}, {"label" : "newLocalDateEncoder", "tail" : "(): Encoder[LocalDate]", "member" : "org.apache.spark.sql.SQLImplicits.newLocalDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newLocalDateEncoder:org.apache.spark.sql.Encoder[java.time.LocalDate]", "kind" : "implicit def"}, {"label" : "newDateEncoder", "tail" : "(): Encoder[Date]", "member" : "org.apache.spark.sql.SQLImplicits.newDateEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newDateEncoder:org.apache.spark.sql.Encoder[java.sql.Date]", "kind" : "implicit def"}, {"label" : "newScalaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newScalaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newScalaDecimalEncoder:org.apache.spark.sql.Encoder[scala.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newJavaDecimalEncoder", "tail" : "(): Encoder[BigDecimal]", "member" : "org.apache.spark.sql.SQLImplicits.newJavaDecimalEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newJavaDecimalEncoder:org.apache.spark.sql.Encoder[java.math.BigDecimal]", "kind" : "implicit def"}, {"label" : "newStringEncoder", "tail" : "(): Encoder[String]", "member" : "org.apache.spark.sql.SQLImplicits.newStringEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newStringEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit def"}, {"label" : "newBooleanEncoder", "tail" : "(): Encoder[Boolean]", "member" : "org.apache.spark.sql.SQLImplicits.newBooleanEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newBooleanEncoder:org.apache.spark.sql.Encoder[Boolean]", "kind" : "implicit def"}, {"label" : "newShortEncoder", "tail" : "(): Encoder[Short]", "member" : "org.apache.spark.sql.SQLImplicits.newShortEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newShortEncoder:org.apache.spark.sql.Encoder[Short]", "kind" : "implicit def"}, {"label" : "newByteEncoder", "tail" : "(): Encoder[Byte]", "member" : "org.apache.spark.sql.SQLImplicits.newByteEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newByteEncoder:org.apache.spark.sql.Encoder[Byte]", "kind" : "implicit def"}, {"label" : "newFloatEncoder", "tail" : "(): Encoder[Float]", "member" : "org.apache.spark.sql.SQLImplicits.newFloatEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newFloatEncoder:org.apache.spark.sql.Encoder[Float]", "kind" : "implicit def"}, {"label" : "newDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.apache.spark.sql.SQLImplicits.newDoubleEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "newLongEncoder", "tail" : "(): Encoder[Long]", "member" : "org.apache.spark.sql.SQLImplicits.newLongEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newLongEncoder:org.apache.spark.sql.Encoder[Long]", "kind" : "implicit def"}, {"label" : "newIntEncoder", "tail" : "(): Encoder[Int]", "member" : "org.apache.spark.sql.SQLImplicits.newIntEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newIntEncoder:org.apache.spark.sql.Encoder[Int]", "kind" : "implicit def"}, {"label" : "newProductEncoder", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Encoder[T]", "member" : "org.apache.spark.sql.LowPrioritySQLImplicits.newProductEncoder", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#newProductEncoder[T<:Product](implicitevidence$9:reflect.runtime.universe.TypeTag[T]):org.apache.spark.sql.Encoder[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/example\/batchWithDependencies\/OtherJob$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "za" : []};