Index.PACKAGES = {"za.co.absa.spline.test.fixture.spline" : [{"name" : "za.co.absa.spline.test.fixture.spline.LineageCaptor", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html", "members_class" : [{"label" : "lineageOf", "tail" : "(action: ⇒ Unit)(ec: ExecutionContext): Future[CapturedLineage]", "member" : "za.co.absa.spline.test.fixture.spline.LineageCaptor.lineageOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#lineageOf(action:=>Unit)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[za.co.absa.spline.test.fixture.spline.LineageCaptor.CapturedLineage]", "kind" : "def"}, {"member" : "za.co.absa.spline.test.fixture.spline.LineageCaptor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Getter", "tail" : "", "member" : "za.co.absa.spline.test.fixture.spline.LineageCaptor.Getter", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#GetterextendsAnyRef", "kind" : "trait"}, {"label" : "Setter", "tail" : "", "member" : "za.co.absa.spline.test.fixture.spline.LineageCaptor.Setter", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#SetterextendsAnyRef", "kind" : "trait"}, {"label" : "CapturedLineage", "tail" : "", "member" : "za.co.absa.spline.test.fixture.spline.LineageCaptor.CapturedLineage", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#CapturedLineage=(za.co.absa.spline.producer.model.ExecutionPlan,Seq[za.co.absa.spline.producer.model.ExecutionEvent])", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCaptor.html", "kind" : "class"}, {"name" : "za.co.absa.spline.test.fixture.spline.LineageCapturingDispatcher", "shortDescription" : "", "members_class" : [{"label" : "send", "tail" : "(event: ExecutionEvent): Unit", "member" : "za.co.absa.spline.test.fixture.spline.LineageCapturingDispatcher.send", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#send(event:za.co.absa.spline.producer.model.ExecutionEvent):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(plan: ExecutionPlan): Unit", "member" : "za.co.absa.spline.test.fixture.spline.LineageCapturingDispatcher.send", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#send(plan:za.co.absa.spline.producer.model.ExecutionPlan):Unit", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "za.co.absa.spline.test.fixture.spline.LineageCapturingDispatcher.name", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#name:String", "kind" : "def"}, {"member" : "za.co.absa.spline.test.fixture.spline.LineageCapturingDispatcher#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "za\/co\/absa\/spline\/test\/fixture\/spline\/LineageCapturingDispatcher.html", "kind" : "class"}, {"name" : "za.co.absa.spline.test.fixture.spline.SplineFixture", "members_trait" : [{"label" : "withLineageTracking", "tail" : "(testBody: (LineageCaptor) ⇒ T)(session: SparkSession): T", "member" : "za.co.absa.spline.test.fixture.spline.SplineFixture.withLineageTracking", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#withLineageTracking[T](testBody:za.co.absa.spline.test.fixture.spline.LineageCaptor=>T)(implicitsession:org.apache.spark.sql.SparkSession):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html", "members_object" : [{"label" : "extractTableIdentifier", "tail" : "(params: Map[String, Any]): Map[String, Any]", "member" : "za.co.absa.spline.test.fixture.spline.SplineFixture.extractTableIdentifier", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#extractTableIdentifier(params:Map[String,Any]):Map[String,Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "za\/co\/absa\/spline\/test\/fixture\/spline\/SplineFixture.html", "kind" : "trait"}], "za.co.absa.spline.test" : [{"name" : "za.co.absa.spline.test.LineageWalker", "shortDescription" : "A class to walk through the execution plan.", "object" : "za\/co\/absa\/spline\/test\/LineageWalker$.html", "members_class" : [{"label" : "dependsOn", "tail" : "(sourceAttribute: Attribute, targetAttribute: Attribute): Boolean", "member" : "za.co.absa.spline.test.LineageWalker.dependsOn", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#dependsOn(sourceAttribute:za.co.absa.spline.producer.model.Attribute,targetAttribute:za.co.absa.spline.producer.model.Attribute):Boolean", "kind" : "def"}, {"label" : "getOperationById", "tail" : "(operationId: String): Operation", "member" : "za.co.absa.spline.test.LineageWalker.getOperationById", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#getOperationById(operationId:String):za.co.absa.spline.producer.model.Operation", "kind" : "def"}, {"label" : "getAttributeById", "tail" : "(attributeId: String): Attribute", "member" : "za.co.absa.spline.test.LineageWalker.getAttributeById", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#getAttributeById(attributeId:String):za.co.absa.spline.producer.model.Attribute", "kind" : "def"}, {"member" : "za.co.absa.spline.test.LineageWalker#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/LineageWalker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(plan: ExecutionPlan): LineageWalker", "member" : "za.co.absa.spline.test.LineageWalker.apply", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#apply(plan:za.co.absa.spline.producer.model.ExecutionPlan):za.co.absa.spline.test.LineageWalker", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/LineageWalker$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "za\/co\/absa\/spline\/test\/LineageWalker.html", "kind" : "class"}, {"name" : "za.co.absa.spline.test.ProducerModelImplicits", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html", "members_object" : [{"label" : "OperationOps", "tail" : "", "member" : "za.co.absa.spline.test.ProducerModelImplicits.OperationOps", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#OperationOpsextendsAnyVal", "kind" : "implicit final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/ProducerModelImplicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "za.co.absa.spline.test.SplineMatchers", "members_trait" : [{"label" : "dependOn", "tail" : "(att: Attribute)(walker: LineageWalker): AttributeDependsOnAttribute", "member" : "za.co.absa.spline.test.SplineMatchers.dependOn", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#dependOn(att:za.co.absa.spline.producer.model.Attribute)(implicitwalker:za.co.absa.spline.test.LineageWalker):SplineMatchers.this.AttributeDependsOnAttribute", "kind" : "def"}, {"label" : "AttributeDependsOnAttribute", "tail" : "", "member" : "za.co.absa.spline.test.SplineMatchers.AttributeDependsOnAttribute", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#AttributeDependsOnAttributeextendsMatcher[za.co.absa.spline.producer.model.Attribute]", "kind" : "class"}, {"label" : "equalToUri", "tail" : "(expectedUri: String): EqualToUri", "member" : "za.co.absa.spline.test.SplineMatchers.equalToUri", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#equalToUri(expectedUri:String):SplineMatchers.this.EqualToUri", "kind" : "def"}, {"label" : "EqualToUri", "tail" : "", "member" : "za.co.absa.spline.test.SplineMatchers.EqualToUri", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#EqualToUriextendsMatcher[String]", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html", "members_object" : [{"label" : "AttributeDependsOnAttribute", "tail" : "", "member" : "za.co.absa.spline.test.SplineMatchers.AttributeDependsOnAttribute", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#AttributeDependsOnAttributeextendsMatcher[za.co.absa.spline.producer.model.Attribute]", "kind" : "class"}, {"label" : "EqualToUri", "tail" : "", "member" : "za.co.absa.spline.test.SplineMatchers.EqualToUri", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers.html#EqualToUriextendsMatcher[String]", "kind" : "class"}, {"label" : "dependOn", "tail" : "(att: Attribute)(walker: LineageWalker): AttributeDependsOnAttribute", "member" : "za.co.absa.spline.test.SplineMatchers.dependOn", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#dependOn(att:za.co.absa.spline.producer.model.Attribute)(implicitwalker:za.co.absa.spline.test.LineageWalker):SplineMatchers.this.AttributeDependsOnAttribute", "kind" : "def"}, {"label" : "equalToUri", "tail" : "(expectedUri: String): EqualToUri", "member" : "za.co.absa.spline.test.SplineMatchers.equalToUri", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#equalToUri(expectedUri:String):SplineMatchers.this.EqualToUri", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/SplineMatchers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "za\/co\/absa\/spline\/test\/SplineMatchers.html", "kind" : "trait"}], "za.co.absa.spline" : [], "za.co" : [], "za.co.absa" : [], "za" : [], "za.co.absa.spline.test.fixture" : [{"name" : "za.co.absa.spline.test.fixture.JDBCFixture", "members_trait" : [{"label" : "jdbcConnectionString", "tail" : ": String", "member" : "za.co.absa.spline.test.fixture.JDBCFixture.jdbcConnectionString", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#jdbcConnectionString:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Using SQLite (whole database is stored in a single file without need for a db server)", "trait" : "za\/co\/absa\/spline\/test\/fixture\/JDBCFixture.html", "kind" : "trait"}, {"name" : "za.co.absa.spline.test.fixture.ReleasableResourceFixture", "members_trait" : [{"label" : "usingResource", "tail" : "(resource: R)(testBody: (R) ⇒ Future[Assertion])(releasable: Releasable[R]): Future[Assertion]", "member" : "za.co.absa.spline.test.fixture.ReleasableResourceFixture.usingResource", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#usingResource[R](resource:R)(testBody:R=>scala.concurrent.Future[org.scalatest.Assertion])(implicitreleasable:util.Using.Releasable[R]):scala.concurrent.Future[org.scalatest.Assertion]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "za\/co\/absa\/spline\/test\/fixture\/ReleasableResourceFixture.html", "kind" : "trait"}, {"name" : "za.co.absa.spline.test.fixture.SparkDatabaseFixture", "members_trait" : [{"label" : "withDatabase", "tail" : "(databaseName: (SparkDatabaseFixture.this)#DatabaseName, tableDefs: ((SparkDatabaseFixture.this)#TableName, (SparkDatabaseFixture.this)#TableDef, (SparkDatabaseFixture.this)#TableData)*)(testBody: ⇒ Future[Assertion])(spark: SparkSession): Future[Assertion]", "member" : "za.co.absa.spline.test.fixture.SparkDatabaseFixture.withDatabase", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#withDatabase(databaseName:SparkDatabaseFixture.this.DatabaseName,tableDefs:(SparkDatabaseFixture.this.TableName,SparkDatabaseFixture.this.TableDef,SparkDatabaseFixture.this.TableData)*)(testBody:=>scala.concurrent.Future[org.scalatest.Assertion])(implicitspark:org.apache.spark.sql.SparkSession):scala.concurrent.Future[org.scalatest.Assertion]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "za\/co\/absa\/spline\/test\/fixture\/SparkDatabaseFixture.html", "kind" : "trait"}, {"name" : "za.co.absa.spline.test.fixture.SparkFixture", "members_trait" : [{"label" : "withIsolatedSparkSession", "tail" : "(builderCustomizer: (Builder) ⇒ Builder)(testBody: (SparkSession) ⇒ T): T", "member" : "za.co.absa.spline.test.fixture.SparkFixture.withIsolatedSparkSession", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#withIsolatedSparkSession[T](builderCustomizer:org.apache.spark.sql.SparkSession.Builder=>org.apache.spark.sql.SparkSession.Builder)(testBody:org.apache.spark.sql.SparkSession=>T):T", "kind" : "def"}, {"label" : "withNewSparkSession", "tail" : "(testBody: (SparkSession) ⇒ T): T", "member" : "za.co.absa.spline.test.fixture.SparkFixture.withNewSparkSession", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#withNewSparkSession[T](testBody:org.apache.spark.sql.SparkSession=>T):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "za\/co\/absa\/spline\/test\/fixture\/SparkFixture.html", "kind" : "trait"}, {"name" : "za.co.absa.spline.test.fixture.SystemFixture", "shortDescription" : "", "object" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html", "members_object" : [{"label" : "IsolatedSystemPropertiesPerTest", "tail" : "", "member" : "za.co.absa.spline.test.fixture.SystemFixture.IsolatedSystemPropertiesPerTest", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#IsolatedSystemPropertiesPerTestextendsBeforeAndAfterEachwithBeforeAndAfterAll", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "za\/co\/absa\/spline\/test\/fixture\/SystemFixture$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};